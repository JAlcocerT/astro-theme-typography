# =============================================================================
# Git-Based Admin Panel Environment Variables
# =============================================================================
# This file contains all environment variables needed for both GitHub and Gitea
# implementations of the admin panel. Copy this file to .env and fill in your
# actual values.

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
NODE_ENV=development
# Options: development, production, test

# Application URL (for OAuth callbacks and CORS)
APP_URL=http://localhost:3000
# For production: https://yourdomain.com

# Application Port (for FastAPI backend)
PORT=8000
# Default: 8000

# =============================================================================
# GIT PROVIDER SELECTION
# =============================================================================

# Git Provider (choose one: github or gitea)
GIT_PROVIDER=github
# Options: github, gitea

# =============================================================================
# GITHUB CONFIGURATION
# =============================================================================

# GitHub OAuth Application Credentials
# Get these from: https://github.com/settings/applications/new
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# GitHub Repository Configuration
GITHUB_OWNER=your_github_username
GITHUB_REPO=your_repository_name
GITHUB_BRANCH=main

# GitHub API Configuration
GITHUB_API_URL=https://api.github.com
# Default: https://api.github.com

# =============================================================================
# GITEA CONFIGURATION
# =============================================================================

# Gitea Instance URL
GITEA_URL=https://your-gitea-instance.com
# Example: https://git.yourdomain.com

# Gitea OAuth Application Credentials
# Create these in your Gitea instance: /user/settings/applications
GITEA_CLIENT_ID=your_gitea_client_id
GITEA_CLIENT_SECRET=your_gitea_client_secret

# Gitea Repository Configuration
GITEA_OWNER=your_gitea_username
GITEA_REPO=your_repository_name
GITEA_BRANCH=main

# Gitea API Configuration
GITEA_API_URL=https://your-gitea-instance.com/api/v1
# Usually: {GITEA_URL}/api/v1

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Secret (for session management)
JWT_SECRET=your_super_secret_jwt_key_here
# Generate with: openssl rand -base64 32

# Session Secret (for NextAuth.js)
NEXTAUTH_SECRET=your_nextauth_secret_here
# Generate with: openssl rand -base64 32

# NextAuth.js URL (for Next.js implementation)
NEXTAUTH_URL=http://localhost:3000
# For production: https://yourdomain.com

# CORS Origins (for FastAPI backend)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173
# Comma-separated list of allowed origins

# =============================================================================
# DATABASE CONFIGURATION (Optional)
# =============================================================================

# Database URL (if using database for sessions/caching)
DATABASE_URL=postgresql://username:password@localhost:5432/admin_panel
# Or: sqlite:///./admin_panel.db

# Redis URL (for session storage)
REDIS_URL=redis://localhost:6379
# Optional: for session storage and caching

# =============================================================================
# CLOUDFLARE PAGES INTEGRATION
# =============================================================================

# Cloudflare Pages Webhook URL
CLOUDFLARE_WEBHOOK_URL=https://api.cloudflare.com/client/v4/accounts/{account_id}/pages/projects/{project_id}/deployments
# Get this from your Cloudflare Pages project settings

# Cloudflare API Token (for triggering rebuilds)
CLOUDFLARE_API_TOKEN=your_cloudflare_api_token
# Create at: https://dash.cloudflare.com/profile/api-tokens

# Cloudflare Account ID
CLOUDFLARE_ACCOUNT_ID=your_cloudflare_account_id
# Found in your Cloudflare dashboard

# Cloudflare Project ID
CLOUDFLARE_PROJECT_ID=your_cloudflare_project_id
# Found in your Cloudflare Pages project settings

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Upload Directory (for file uploads)
UPLOAD_DIR=./uploads
# Directory where uploaded files are stored

# Maximum File Size (in bytes)
MAX_FILE_SIZE=10485760
# Default: 10MB (10 * 1024 * 1024)

# Allowed File Types
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp
# Comma-separated MIME types

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log Level
LOG_LEVEL=info
# Options: debug, info, warn, error

# Enable Request Logging
ENABLE_REQUEST_LOGGING=true
# Options: true, false

# Sentry DSN (for error tracking)
SENTRY_DSN=your_sentry_dsn_here
# Optional: for error tracking and monitoring

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Enable Hot Reload
HOT_RELOAD=true
# Options: true, false

# Enable Debug Mode
DEBUG=false
# Options: true, false

# Mock Git Operations (for development)
MOCK_GIT_OPERATIONS=false
# Options: true, false (useful for testing without actual Git operations)

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================

# SSL/TLS Configuration
SSL_CERT_PATH=/path/to/ssl/cert.pem
SSL_KEY_PATH=/path/to/ssl/private.key
# Required for production HTTPS

# Rate Limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=900
# Requests per window (in seconds)

# =============================================================================
# WEBHOOK CONFIGURATION
# =============================================================================

# Webhook Secret (for verifying webhook signatures)
WEBHOOK_SECRET=your_webhook_secret_here
# Generate with: openssl rand -base64 32

# Enable Webhook Verification
ENABLE_WEBHOOK_VERIFICATION=true
# Options: true, false

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Cache TTL (Time To Live in seconds)
CACHE_TTL=3600
# Default: 1 hour

# Enable Caching
ENABLE_CACHE=true
# Options: true, false

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password
SMTP_FROM=noreply@yourdomain.com

# Slack Webhook (for notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
# Optional: for Slack notifications

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup Directory
BACKUP_DIR=./backups
# Directory for storing backups

# Enable Automatic Backups
ENABLE_AUTO_BACKUP=false
# Options: true, false

# Backup Schedule (cron expression)
BACKUP_SCHEDULE=0 2 * * *
# Default: daily at 2 AM

# =============================================================================
# NOTES
# =============================================================================
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env to version control
# 3. Use different values for development and production
# 4. Generate strong secrets using: openssl rand -base64 32
# 5. For Gitea setup, ensure your instance has HTTPS enabled
# 6. For GitHub setup, create OAuth app at: https://github.com/settings/applications/new
# 7. For Gitea setup, create OAuth app at: /user/settings/applications
# 8. Test your configuration with the provided test scripts
